[tool.poetry]
name = "adopy"
version = "0.4.1-alpha.0"
description = "Adaptive Design Optimization on Experimental Tasks"
authors = ["Jaeyeong Yang <jaeyeong.yang1125@gmail.com>"]
license = "GPL-3.0+"
readme = "README.md"
homepage = "https://adopy.org"
repository = "https://github.com/adopy/adopy"
documentation = "https://adopy.org"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3 :: Only"
]

[tool.poetry.dependencies]
python = ">=3.6"
importlib_metadata = { version = "*", python = "<3.8" }
pandas = "*"
scipy = ">=1.0.0"
numpy = "*"
jax = "^0.2"

# Extra packages for testing
pytest = { version = ">=6.0", optional = true }
pytest-cov = { version = "*", optional = true }
codecov = { version = "*", optional = true }

# Extra packages for documentation
sphinx = { version = "*", optional = true }
sphinx_rtd_theme = { version = "*", optional = true }
sphinx-autobuild = { version = "*", optional = true }
recommonmark = { version = "*", optional = true }
sphinx-issues = { version = "^1.2.0", optional = true }
ipykernel = { version = "^5.3.4", optional = true }
nbsphinx = { version = "^0.8.0", optional = true }
matplotlib = { version = "^3.3.3", optional = true }
jupyterlab = { version = "^2.2.9", optional = true }

[tool.poetry.dev-dependencies]
autopep8 = "*"
flake8 = "*"
pylint = "*"
mypy = "*"
build = "^0.7.0"

[tool.poetry.extras]
test = [
  "pytest",
  "pytest-cov",
  "codecov"
]
docs = [
  "sphinx",
  "sphinx_rtd_theme",
  "sphinx-autobuild",
  "recommonmark",
  "sphinxcontrib-rawfiles",
  "sphinx-issues",
  "matplotlib",
  "ipykernel",
  "jupyterlab",
  "nbsphinx"
]

[[tool.poetry.source]]
name = "test"
url = "https://test.pypi.org/legacy/"
secondary = true

[build-system]
requires = ["poetry>=0.12", "wheel"]
build-backend = "poetry.masonry.api"
